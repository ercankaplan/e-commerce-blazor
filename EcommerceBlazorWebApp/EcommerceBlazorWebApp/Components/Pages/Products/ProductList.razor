@* @inject HttpClient _httpClient; *@
@inject IProductService _productService;
@attribute [StreamRendering]

@if (Products is null || !Products.Any())
{

    <span>loading...</span>

}
else
{

    <ul class="list-unstyled">

        @foreach (var item in Products)
        {
            <li class="media my-3">

                <div class="image-img-wrapper ">
                    <a href="/product/@item.Id">
                        <img class="media-img" src="@item.ImageUrl" alt="@item.Title" />
                    </a>
                </div>


                <div class="media-body">
                    <a href="/product/@item.Id">
                        <h4 class="mb-0">@item.Title</h4>
                    </a>
                    <p>@item.Description</p>
                    <h5 class="price">$@item.Price</h5>
                </div>

            </li>
        }

    </ul>
}

@code {

    private  List<Product>? Products ;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        // var result = await _httpClient.GetFromJsonAsync<List<Product>>("http://localhost:5063/api/Product");

        var result = await _productService.GetProducts();

        if (result.Success && result.Data is not null)
            Products = result.Data;




    }





}
